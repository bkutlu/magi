extends ../layout
block body
	- var user_id = user ? user._id + "" : "";
	div(class="container annotation-table", id="gene-annotations")
		br
		h3 #{gene} mutation annotations - REVISION
		br
		//- Helper javascript functions
		- var pubmedLink = function (_id){
		- 		if (_id.toLowerCase().slice(0, 3) == 'pmc'){
		- 			var href = 'http://www.ncbi.nlm.nih.gov/pmc/articles/' + _id;
		-		} else {
		-			var href = 'http://www.ncbi.nlm.nih.gov/pubmed/' + _id;
		-		}
		-		return "<a href='" + href + "' target='_new'>" + _id + "</a>";
		-	}

		- var mutation_type = function(n){
		-		var n = n.toLowerCase();
		-		if (n == 'missense') return 'Missense';
		-		else if (n == 'nonsense') return 'Nonsense';
		-		else if (n == 'in_frame_del') return 'In-Frame Deletion';
		-		else if (n == 'in_frame_ins') return 'In-Frame Insertion';
		-		else if (n == 'frame_shift_ins') return 'Frame-Shift Insertion';
		-		else if (n == 'frame_shift_del') return 'Frame-Shift Deletion';
		-		else if (n == 'splice_site') return 'Splite-Site';
		-		else return n.charAt(0).toUpperCase() + n.slice(1);
		-	}

		- var mutation_class = function(n){
		-		var n = n.toLowerCase();
		-		if (n == 'snv') return 'Single Nucleotide Variant';
		-		else if (n == 'cna') return 'Copy Number Aberration';
		-		else if (n == 'amp') return 'Copy Number Aberration';
		-		else if (n == 'del') return 'Copy Number Aberration';
		-		else return n.charAt(0).toUpperCase() + n.slice(1);
		-	}

		- var cancerAbbr = function(cancer){
		-		if (cancer){
		-			var c = cancer.toLowerCase();
		-			if (typeof(abbrToCancer[c]) != 'undefined'){
		-				return "<abbr title='" + abbrToCancer[c] + "'>" + c.toUpperCase() + "</abbr>"
		-			} else if (typeof(cancerToAbbr[c]) != 'undefined') {
		-				var abbr = cancerToAbbr[c];
		-				return "<abbr title='" + abbrToCancer[abbr] + "'>" + abbr.toUpperCase() + "</abbr>"
		-			} else {
		-				return cancer;
		-			}
		-		} else {
		-			return "Cancer";
		-		}
		-	}

		table(class="table table-condensed", id="gene-annotation-table")
			thead
				tr(style="background:#e3e3e3")
					th Mutation class
					th Mutation type
					th Protein sequence change
					th(class="extra-width")
					th PMID / PMCID
					th Source
					th Associated cancer
					th Somatic?
					th Measurement type
					th Characterization
					th Like?
					th Edit
			tbody
				-for (var i = 0; i < annotations.length; i++)
					- var d = annotations[i];
					- var cancer = cancerAbbr(d.cancer)
					- var mutationClass = d.mut_class ? d.mut_class : "--";
					- var mutationType = d.mut_type ? d.mut_type : "--";
					- var proteinSeqChange = d.protein_seq_change ? d.protein_seq_change : "--";
					- var numVotes = d.upvotes.length - d.downvotes.length;
					- var comments = d.comments;
					- var pmid_ref = d.reference
					- var germline = d.is_germline ? d.is_germline : "--";
					- var measure_type = d.measurement_type ? d.measurement_type : "--";
					- var characterization = d.characterization ? d.characterization : "--";
					- var downVoteClass = d.downvotes.indexOf(user_id) === -1 ? "" : "downvote-on";
					- var upVoteClass = d.upvotes.indexOf(user_id) === -1 ? "" : "upvote-on";
					- var liked = d.upvotes.indexOf(user_id) === -1 ? "" : "anno-liked";
					- var id = d.u_id;


					- var popover_header = '<table class="table" style="font-size:90%"><thead><tr style="background:#d3d3d3"><th>User</th><th>Comment</th></tr></thead>';
					mixin commentPopover(comms)
						- var cell = function(str){ return '<td>' + str + '</td>' };
						- var textedComms = comms.filter(function(c) {return !(c.comment === '<empty>');});
						- if (textedComms.length > 0)
							- var rows = textedComms.map(function(comment){return '<tr>' + cell(comment.user_name) + cell(comment.comment) + '</tr>';});
							- var tbl = popover_header + '<tbody>' + rows.join("") + '</tbody></table>';
							a(href='#', data-title='Comments', data-trigger='focus', data-content='#{tbl}', data-toggle='popover', class='initialism badge')
								| #{textedComms.length}

					tr
						td #{mutation_class(mutationClass)}
						td #{mutation_type(mutationType)}
						td #{proteinSeqChange}
						td(class="extra-width")
						td !{pubmedLink(pmid_ref)}
							+commentPopover(comments)
						td !{d.source}
						td !{cancer}
						td #{germline}
						td #{measure_type}
						td #{characterization}
						td
							span(id="vote-like-#{id}", class="glyphicon glyphicon-thumbs-up anno-vote-on #{liked}", style="cursor:pointer")
						td
							a(href='/annotation/mutation/#{id}' class="glyphicon glyphicon-pencil")
		br
		div(id="annotationStatus", class="text-center", style="width:100%;display:off")
		div(id="commentVote", class="container", style="width%100;")
			label(class="toggle")
			| <b>Add a comment to your vote? (Optional)</b>
			span(class="glyphicon glyphicon-remove", style="cursor:pointer;float:right", onclick="$(this).parent().hide();$('textarea#mutation-comment').hide()")
			textarea(class="form-control", id="mutation-comment", placeholder="Enter any comments.", type="textarea")


block belowTheFold
	script(src='/components/DataTables/media/js/jquery.dataTables.min.js').
	script(src='/js/dataTableWrapper.js').
	script(type='text/javascript').
		//- Convert the tables into DataTables
		var tbl = addDataTable({
				tableID: "#gene-annotation-table", aaSorting: [[0, "asc"]]
			});

		//- Set up the popovers
		function setupPopovers(){
			$("[data-toggle=popover]").popover({
				html:true, container: 'body'
			}).click(function(e){ e.preventDefault(); $(this).focus(); })
		}
		setupPopovers();

		//- Make sure the popovers are active whenever the table is updated
		tbl.on( 'draw', setupPopovers);

		$("#extra-width").css({'width': '30px'});
		$("#gene-annotation-table_info").css({'font-weight': 'bold', 'font-size': '110%'});
		$(document).ready(function(){
			clearComment();
			$('span.anno-vote-on').on('click', function() {
				if($(this).hasClass('anno-liked')) {
					$(this).removeClass('anno-liked');
				} else {
					$(this).addClass('anno-liked');
				}
			});
		});

		function clearComment() {
			$('#mutation-comment').val('');
		}


		// Make sure to re-bind the onclick functionality whenever the table changes
		tbl.on( 'draw', function () {
			setupPopovers();
		} );


		var infoClasses	 = 'alert alert-info',
			warningClasses = 'alert alert-warning',
			successClasses = 'alert alert-success';

		function annotationStatus(msg, classes) {
			$('#annotationStatus').attr('class', classes);
			$('#annotationStatus').html(msg);
			$('#annotationStatus').show().delay(5000).slideUp();
		}
